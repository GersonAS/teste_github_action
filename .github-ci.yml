image: docker:stable

# é necessário definir os stages para usar dependencias
stages:
- pre-build
- build
- test
- deploy
- notificacao


build-docker:
  services:
  - docker:dind
  retry: 2
  before_script:
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  
  stage: pre-build
  script:
  - docker build -t minha-imagem .
  - docker tag minha-imagem g014x/minha-imagem:latest
  - docker push g014x/minha-imagem:latest


build-project:
  stage: build
  image: g014x/minha-imagem:latest
  services:
  - docker:dind
  - mysql:5.7
  retry: 2
  variables:
    MYSQL_USER: devops_dev
    MYSQL_PASSWORD: mestre
    MYSQL_DATABASE: todo_dev
    MYSQL_ROOT_PASSWORD: senha

    DB_NAME: 'todo_dev'
    DB_USER: 'devops_dev'
    DB_PASSWORD: 'mestre'
    DB_PORT: '3306'
    DB_HOST: 'mysql'
    SECRET_KEY: 'r*5ltfzw-61ksdm41fuul8+hxs$86yo9%k1%k=(!@=-wv4qtyv'

  tags:
  - executor-tarefas
  dependencies:
  - build-docker
  script:
  - python manage.py makemigrations
  - python manage.py migrate

test-project:
  image: g014x/minha-imagem:latest
  stage: test
  services:
  - docker:dind
  - mysql:5.7

  variables:
    MYSQL_USER: devops_dev
    MYSQL_PASSWORD: mestre
    MYSQL_DATABASE: todo_dev
    MYSQL_ROOT_PASSWORD: senha

    DB_NAME: 'todo_dev'
    DB_USER: 'devops_dev'
    DB_PASSWORD: 'mestre'
    DB_PORT: '3306'
    DB_HOST: 'mysql'
    SECRET_KEY: 'r*5ltfzw-61ksdm41fuul8+hxs$86yo9%k1%k=(!@=-wv4qtyv'
  dependencies:
  - build-project
  tags:
  - executor-tarefas
  script:
  - python -m unittest setUp

deploy-project:
  stage: deploy
  tags:
  - executor-deploy
  dependencies:
  - test-project
  script:
  - tar cfz arquivos.tgz *
  - scp arquivos.tgz stark@192.168.0.14:/ultron/home/estudos/curso_gitlab_alura/tmp/
  - ssh stark@192.168.0.14 'cd /ultron/home/estudos/curso_gitlab_alura; tar xfz arquivos.tgz; docker-compose up -d'

notificacao-sucesso:
  stage: notificacao
  tags:
  - executor-deploy
  when: on_success
  script:
  - echo "deu tudo certo"

notificacao-falhas:
  stage: notificacao
  tags:
  - executor-deploy
  when: on_failure
  script:
  - echo "ERROUUUU!!!"